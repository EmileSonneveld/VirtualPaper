#if ! (UNITY_DASHBOARD_WIDGET || UNITY_WEBPLAYER || UNITY_WII || UNITY_NACL || UNITY_FLASH || UNITY_BLACKBERRY) // Disable under unsupported platforms.
//////////////////////////////////////////////////////////////////////
//
// Copyright (c) 2014 Audiokinetic Inc. / All Rights Reserved
//
//////////////////////////////////////////////////////////////////////

using UnityEngine;
using System.Collections.Generic;
using System;

[AddComponentMenu("Wwise/AkBank")]
/// @brief Loads and unloads a soundbank at the specified moment.
public class AkBank : AkUnityEventHandler 
{
	// 2014.1 BETA 2
	public int unloadTriggerMask = AkUnityEventHandler.DESTROY_TRIGGER_BIT;
	
	// 2014.1 FINAL
	public List<int> unloadTriggerList = new List<int>() {AkUnityEventHandler.DESTROY_TRIGGER_ID };
	
	// Shared
#if UNITY_EDITOR
	public byte[] valueGuid = new byte[16];
#endif
    public string bankName = "";
	public bool loadAsynchronous = false;
	
	public override void HandleEvent(GameObject in_gameObject){}
	
	public override void Migrate()
	{
		base.Migrate();

        List<Type> oldTriggers = AkTriggerBase.GetAllDerivedTypesTheOldWay();
		Dictionary<uint, string> newTriggers = AkTriggerBase.GetAllDerivedTypes ();
		
		for(int i = 0; i < oldTriggers.Count; i++)
		{
			if((unloadTriggerMask & (1 << (i + RESERVED_BITS))) != 0)
			{
				foreach (KeyValuePair<uint, string> pair in newTriggers)
				{
					if (pair.Value == oldTriggers[i].Name)
					{
						unloadTriggerList.Add((int)pair.Key);
						break;
					}
				}
			}
		}
		
		if( (unloadTriggerMask & AWAKE_TRIGGER_BIT) != 0 )
		{
			unloadTriggerList.Add(AWAKE_TRIGGER_ID);
		}
		
		if( (unloadTriggerMask & START_TRIGGER_BIT) != 0 )
		{
			unloadTriggerList.Add(START_TRIGGER_ID);
		}
		
		if( (unloadTriggerMask & DESTROY_TRIGGER_BIT) != 0 )
		{
			unloadTriggerList.Add(DESTROY_TRIGGER_ID);
		}
	}	

}
#endif // #if ! (UNITY_DASHBOARD_WIDGET || UNITY_WEBPLAYER || UNITY_WII || UNITY_NACL || UNITY_FLASH || UNITY_BLACKBERRY) // Disable under unsupported platforms.